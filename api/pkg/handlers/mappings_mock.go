// Code generated by MockGen. DO NOT EDIT.
// Source: mappings.go

// Package handlers is a generated GoMock package.
package handlers

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
	mappings "urlshortener/pkg/mappings"
)

// MockMappingRepoInterface is a mock of MappingRepoInterface interface
type MockMappingRepoInterface struct {
	ctrl     *gomock.Controller
	recorder *MockMappingRepoInterfaceMockRecorder
}

// MockMappingRepoInterfaceMockRecorder is the mock recorder for MockMappingRepoInterface
type MockMappingRepoInterfaceMockRecorder struct {
	mock *MockMappingRepoInterface
}

// NewMockMappingRepoInterface creates a new mock instance
func NewMockMappingRepoInterface(ctrl *gomock.Controller) *MockMappingRepoInterface {
	mock := &MockMappingRepoInterface{ctrl: ctrl}
	mock.recorder = &MockMappingRepoInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockMappingRepoInterface) EXPECT() *MockMappingRepoInterfaceMockRecorder {
	return m.recorder
}

// GetByShortURL mocks base method
func (m *MockMappingRepoInterface) GetByShortURL(arg0 string) (*mappings.Mapping, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByShortURL", arg0)
	ret0, _ := ret[0].(*mappings.Mapping)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByShortURL indicates an expected call of GetByShortURL
func (mr *MockMappingRepoInterfaceMockRecorder) GetByShortURL(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByShortURL", reflect.TypeOf((*MockMappingRepoInterface)(nil).GetByShortURL), arg0)
}

// AddMapping mocks base method
func (m *MockMappingRepoInterface) AddMapping(arg0 *mappings.Mapping) (*mappings.Mapping, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddMapping", arg0)
	ret0, _ := ret[0].(*mappings.Mapping)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddMapping indicates an expected call of AddMapping
func (mr *MockMappingRepoInterfaceMockRecorder) AddMapping(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddMapping", reflect.TypeOf((*MockMappingRepoInterface)(nil).AddMapping), arg0)
}

// IncrementMappingViews mocks base method
func (m *MockMappingRepoInterface) IncrementMappingViews(arg0 *mappings.Mapping) (*mappings.Mapping, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IncrementMappingViews", arg0)
	ret0, _ := ret[0].(*mappings.Mapping)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// IncrementMappingViews indicates an expected call of IncrementMappingViews
func (mr *MockMappingRepoInterfaceMockRecorder) IncrementMappingViews(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IncrementMappingViews", reflect.TypeOf((*MockMappingRepoInterface)(nil).IncrementMappingViews), arg0)
}
